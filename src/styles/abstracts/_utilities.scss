@use 'maps' as *;
@use 'mixins' as *;

@each $color, $value in $colors {
   .text-#{$color} {
      color: var(--clr-#{$color}, $value);
   }
   .bg-#{$color} {
      background-color: var(--clr-#{$color}, $value);
   }
}

@each $screen-size, $map in $type-scale {
   @if $screen-size == mobile {
      @each $feature, $nested-map in $map {
         @if $feature == size {
            @each $property, $value in $nested-map {
               .#{$property} {
                  font-size: var(--#{$property});
               }
            }
         } @else if $feature == line-height {
            @each $property, $value in $nested-map {
               .#{$property} {
                  line-height: var(--#{$property});
               }
            }
         } @else {
            @each $property, $value in $nested-map {
               .#{$property} {
                  font-weight: var(--#{$property});
               }
            }
         }
      }
   }
}

// // =========================================
// // layout
// // =========================================

.flow > *:where(:not(:first-child)) {
   margin-top: var(--flow-space, 1rem);
}

.sr-only {
   position: absolute;
   width: 1px;
   height: 1px;
   padding: 0;
   margin: -1px;
   overflow: hidden;
   clip: rect(0, 0, 0, 0);
   white-space: nowrap;
   border: 0;
}

.grid-container {
   display: grid;
}
